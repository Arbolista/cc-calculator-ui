<!--suppress ALL -->
<rtn-style-require dependency="global.rtns"/>
<rtn-style-require dependency="game.rtns"/>

var style = Stylesheet.create(_.merge({}, global, game));
var cls2style = function(cls) {
    return _.map(cls.split(' '), function(key) {
        return style[key];
    });
}

<View class="page" onLayout="{this.onViewLayout}">
    <View style="noteLine">
        <View class="notesLineBase {cond?'wNoteLine' : 'werwe'}">
                style={cls2style}
            <Note text='C' id='c' onGuess="{this.guess}" level="{this.props.level}"/>
            <Note text='D' id='d' onGuess="{this.guess}" level="{this.props.level}"/>
            <Note text='E' id='e' onGuess="{this.guess}" level="{this.props.level}"/>
        </View>
        <View rn-class="a b c" style="{bNoteLine}" pointerEvents="box-none">
            <Note text='C#' id='csharp' onGuess="{this.guess}" level="{this.props.level}"/>
            <Note text='D#' id='dsharp' onGuess="{this.guess}" level="{this.props.level}"/>
        </View>
    </View>
    <View style="{styles.statusLine}">
        <View style="{styles.f1}"/>
        <View>
            <Text style="{styles.stats}">Time left:</Text>
            <Text style="{styles.statsVal}">{this.state.secondsLeft}</Text>
        </View>
        <TouchableHighlight style="{[styles.statusBtn, styles[this.state.status]]}"
                            onPress="{this.repeatChallenge}"
                            underlayColor="{white}">
            <View>
                <Text style="{[styles.statusBtnTextBase, styles[this.state.status+'Text']]}">
                    {this.state.status.charAt(0).toUpperCase() + this.state.status.slice(1)}
                </Text>
            </View>
        </TouchableHighlight>
        <View>
            <Text style="{styles.stats}">Correct:</Text>
            <Text style="{styles.statsVal}">{this.state.correctAnswers}</Text>
        </View>
        <View style="{styles.f1}"/>
    </View>
    <View style="{styles.noteLine}">
        <View style="{[styles.notesLineBase, styles.wNoteLine]}">
            <Note text='F' id='f' onGuess="{this.guess}" level="{this.props.level}"/>
            <Note text='G' id='g' onGuess="{this.guess}" level="{this.props.level}"/>
            <Note text='A' id='a' onGuess="{this.guess}" level="{this.props.level}"/>
            <Note text='B' id='b' onGuess="{this.guess}" level="{this.props.level}"/>
        </View>
        <View style="{bNoteLineDown}" pointerEvents="box-none">
            <Note text='F#' id='fsharp' onGuess="{this.guess}" level="{this.props.level}"/>
            <Note text='G#' id='gsharp' onGuess="{this.guess}" level="{this.props.level}"/>
            <Note text='A#' id='asharp' onGuess="{this.guess}" level="{this.props.level}"/>
        </View>
    </View>
</View>